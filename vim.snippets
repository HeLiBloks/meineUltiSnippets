# vim: set et ts=4 sw=4 tw=0 foldenable foldmethod=syntax foldclose=all:
snippet Bundle "Plugin from git" b
Bundle '${1:`v! printf("%s", @*)` }'
$0
endsnippet

snippet funcDict! "function dictionary" b
function! ${1:functionName}(${2:param}) ${3:dict}
    let a:${4:$2}
    return '${5:$2}'
endfunction $1
$0
endsnippet

snippet func! "function definition" b
function! ${1:functionName}(${2:...})
    let l:linestart = a:0>0 ? a:1 : 1           "init to 1 if empty
    let l:lineend   = a:0>1 ? a:2 : line('$')   "init to lastLineNr if  empty
    return '${4:$2}'
endfunc $1
$0
endsnippet

snippet funcProto "function dict prototype" b
func! ${1:`!v expand('%:t:r')`}#prototype()
    let prototype = {
        \ '$1':function('`!v split(getline(search('^\s*func!\?\(tion\)\?\s\+.*','bn',line('0'))))[1][:-3]`'),}
    return prototype
endfunc
endsnippet

snippet dict "dictionary" b
let ${1:g:dictName} = {
    \ "${2:key}": ""${3:string|funcref}",
    \ "key": "value", }
endsnippet

snippet split() "split string" b
split(getline('.'),${1:str} )
endsnippet

snippet functionP "define python function" b
function! ${1:VimEntranceFunc}(...)
    let l:linestart = a:0>0 ? a:1 : 1           "init to 1 if empty
    let l:lineend   = a:0>1 ? a:2 : line('$')   "init to lastLineNr if  empty

python3 << endPython
#!/bin/python
import ${2:vim|neovim}
firstFuncArg=$2.eval("a:1")

endPython

endfunction
${2:command! $1 :call $1()}
${3:inoremap <F5> <C-R>=$1()<CR>}

endsnippet

snippet command "command args" b
command! -nargs=${1:0|1|?|+} -complete=custom,${2:customfunc()} ${4:cmdname} call ${3:function}(${4:<q-args>})
endsnippet

snippet section "section autocmdgrp folds" b
" ${1:filetype} `!v get(split(&foldmarker,','),0)`"

augroup filetype_$1
    autocmd filetype $1 setlocal lazyredraw
    autocmd filetype $1 
augroup end

" `!v get(split(&foldmarker,','),1)`"
endsnippet


